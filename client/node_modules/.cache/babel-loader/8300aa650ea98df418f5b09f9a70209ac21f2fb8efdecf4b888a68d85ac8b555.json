{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ganes\\\\OneDrive\\\\Desktop\\\\mern-registration\\\\client\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [mobileNumber, setMobileNumber] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          mobileNumber,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('token', data.token);\n        const hours = new Date().getHours();\n        const greeting = hours < 12 ? 'Good Morning' : hours < 18 ? 'Good Afternoon' : 'Good Evening';\n        setMessage(`${greeting}, Mr. User! Redirecting...`);\n        setTimeout(() => {\n          window.location.href = '/landing';\n        }, 2000);\n      } else {\n        setMessage('Login failed. Invalid credentials.');\n      }\n    } catch (error) {\n      setMessage('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        placeholder: \"Mobile Number\",\n        value: mobileNumber,\n        onChange: e => setMobileNumber(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"Qjv9DAFQHh2pb+MTbIUl8PCIj40=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","mobileNumber","setMobileNumber","password","setPassword","message","setMessage","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","localStorage","setItem","token","hours","Date","getHours","greeting","setTimeout","window","location","href","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/ganes/OneDrive/Desktop/mern-registration/client/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Login = () => {\r\n    const [mobileNumber, setMobileNumber] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:5000/login', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ mobileNumber, password }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                localStorage.setItem('token', data.token);\r\n                const hours = new Date().getHours();\r\n                const greeting =\r\n                    hours < 12\r\n                        ? 'Good Morning'\r\n                        : hours < 18\r\n                        ? 'Good Afternoon'\r\n                        : 'Good Evening';\r\n                setMessage(`${greeting}, Mr. User! Redirecting...`);\r\n                setTimeout(() => {\r\n                    window.location.href = '/landing';\r\n                }, 2000);\r\n            } else {\r\n                setMessage('Login failed. Invalid credentials.');\r\n            }\r\n        } catch (error) {\r\n            setMessage('An error occurred. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <form onSubmit={handleLogin}>\r\n                <input\r\n                    type=\"tel\"\r\n                    placeholder=\"Mobile Number\"\r\n                    value={mobileNumber}\r\n                    onChange={(e) => setMobileNumber(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf,YAAY;UAAEE;QAAS,CAAC;MACnD,CAAC,CAAC;MAEF,IAAIO,QAAQ,CAACO,EAAE,EAAE;QACb,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC;QACzC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACnC,MAAMC,QAAQ,GACVH,KAAK,GAAG,EAAE,GACJ,cAAc,GACdA,KAAK,GAAG,EAAE,GACV,gBAAgB,GAChB,cAAc;QACxBjB,UAAU,CAAC,GAAGoB,QAAQ,4BAA4B,CAAC;QACnDC,UAAU,CAAC,MAAM;UACbC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,UAAU;QACrC,CAAC,EAAE,IAAI,CAAC;MACZ,CAAC,MAAM;QACHxB,UAAU,CAAC,oCAAoC,CAAC;MACpD;IACJ,CAAC,CAAC,OAAOyB,KAAK,EAAE;MACZzB,UAAU,CAAC,sCAAsC,CAAC;IACtD;EACJ,CAAC;EAED,oBACIR,OAAA;IAAAkC,QAAA,gBACIlC,OAAA;MAAAkC,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdtC,OAAA;MAAMuC,QAAQ,EAAE9B,WAAY;MAAAyB,QAAA,gBACxBlC,OAAA;QACIwC,IAAI,EAAC,KAAK;QACVC,WAAW,EAAC,eAAe;QAC3BC,KAAK,EAAEvC,YAAa;QACpBwC,QAAQ,EAAGjC,CAAC,IAAKN,eAAe,CAACM,CAAC,CAACkC,MAAM,CAACF,KAAK,CAAE;QACjDG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFtC,OAAA;QACIwC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAErC,QAAS;QAChBsC,QAAQ,EAAGjC,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACkC,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFtC,OAAA;QAAQwC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EACN/B,OAAO,iBAAIP,OAAA;MAAAkC,QAAA,EAAI3B;IAAO;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd,CAAC;AAACpC,EAAA,CA3DID,KAAK;AAAA6C,EAAA,GAAL7C,KAAK;AA6DX,eAAeA,KAAK;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}